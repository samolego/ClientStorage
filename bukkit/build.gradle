repositories {
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    /*
     As Spigot-API depends on the BungeeCord ChatComponent-API,
    we need to add the Sonatype OSS repository, as Gradle,
    in comparison to maven, doesn't want to understand the ~/.m2
    directory unless added using mavenLocal(). Maven usually just gets
    it from there, as most people have run the BuildTools at least once.
    This is therefore not needed if you're using the full Spigot/CraftBukkit,
    or if you're using the Bukkit API.
    */
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    mavenLocal() // This is needed for CraftBukkit and Spigot.
}

dependencies {
    // The full Spigot server with no shadowing. Requires mavenLocal.
    compileOnly("org.spigotmc:spigot-api:${rootProject.minecraft_version}-R0.1-SNAPSHOT")

    compileOnly "com.google.code.gson:gson:2.8.9"
    testCompileOnly("com.google.code.gson:gson:2.8.9")  // todo
    // And guava
    compileOnly "com.google.guava:guava:33.0.0-jre"
    testCompileOnly("com.google.guava:guava:33.0.0-jre")

    // Logging
    def logVersion = "2.19.0"
    compileOnly "org.apache.logging.log4j:log4j-api:${logVersion}"
    compileOnly "org.apache.logging.log4j:log4j-core:${logVersion}"
    compileOnly "org.apache.logging.log4j:log4j-slf4j-impl:${logVersion}"

    testCompileOnly("org.apache.logging.log4j:log4j-api:${logVersion}")
    testCompileOnly("org.apache.logging.log4j:log4j-core:${logVersion}")
    testCompileOnly("org.apache.logging.log4j:log4j-slf4j-impl:${logVersion}")
}

processResources {
    inputs.property "version", rootProject.version

    // Parse semver from rootProject.minecraft_version
    // and get the first 2 parts (major.minor)
    def mcVersion = rootProject.minecraft_version.tokenize('.')
    mcVersion = mcVersion[0] + '.' + mcVersion[1]
    inputs.property "apiVersion", mcVersion

    filesMatching("plugin.yml") {
        expand("version": rootProject.version, "apiVersion": mcVersion)
    }
}

modrinth {
    // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
    loaders = ["bukkit", "spigot", "paper", "purpur"]
}
