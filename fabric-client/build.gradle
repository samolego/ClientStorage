loom {
	accessWidenerPath = file("src/main/resources/${archives_base_name}.accesswidener")

	runs {
		client {
			client()
			setConfigName("Fabric Client")
			ideConfigGenerated(true)
			runDir("../run")
		}
	}
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/releases' }
	maven { url = "https://maven.isxander.dev/releases" }
}

dependencies {
	// Modmenu (for configuring the mod in-game)
	modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}")

	// YACL (for configuring the mod in-game)
	modImplementation(include("dev.isxander:yet-another-config-lib:${project.yacl_version}"))
}


processResources {
	inputs.property "version", rootProject.version

	filesMatching("fabric.mod.json") {
		expand "version": rootProject.version
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

modrinth {
	uploadFile = remapJar  // With Loom, this MUST be set to `remapJar` instead of `jar`!
	loaders = ["fabric", "quilt"]  // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
	dependencies {  // A special DSL for creating dependencies
		required.project "fabric-api"  // Creates a new required dependency on Fabric API
	}
}
